generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  category_id   Int        @id @default(autoincrement())
  category_name String     @db.VarChar(15)
  description   String?
  products      products[]
}

model customers {
  customer_id   String   @id @db.Char
  company_name  String   @db.VarChar(40)
  contact_name  String?  @db.VarChar(30)
  contact_title String?  @db.VarChar(30)
  address       String?  @db.VarChar(60)
  city          String?  @db.VarChar(15)
  region        String?  @db.VarChar(15)
  postal_code   String?  @db.VarChar(10)
  country       String?  @db.VarChar(15)
  phone         String?  @db.VarChar(24)
  fax           String?  @db.VarChar(24)
  orders        orders[]
}

model employee_territories {
  employee_id  Int
  territory_id String      @db.VarChar(20)
  employees    employees   @relation(fields: [employee_id], references: [employee_id])
  territories  territories @relation(fields: [territory_id], references: [territory_id])

  @@id([employee_id, territory_id])
}

model employees {
  employee_id          Int                    @id @default(autoincrement())
  last_name            String                 @db.VarChar(20)
  first_name           String                 @db.VarChar(10)
  title                String?                @db.VarChar(30)
  title_of_courtesy    String?                @db.VarChar(25)
  birth_date           DateTime?              @db.Date
  hire_date            DateTime?              @db.Date
  address              String?                @db.VarChar(60)
  city                 String?                @db.VarChar(15)
  region               String?                @db.VarChar(15)
  postal_code          String?                @db.VarChar(10)
  country              String?                @db.VarChar(15)
  home_phone           String?                @db.VarChar(24)
  email                String?                @unique
  extension            String?                @db.VarChar(4)
  notes                String?
  reports_to           Int?
  photo_path           String?                @db.VarChar(255)
  employee_territories employee_territories[]
  employees            employees?             @relation("employeesToemployees", fields: [reports_to], references: [employee_id])
  other_employees      employees[]            @relation("employeesToemployees")
  orders               orders[]
}

model order_details {
  order_id   Int
  product_id Int
  unit_price Float    @db.Real
  quantity   Int
  discount   Float    @db.Real
  orders     orders   @relation(fields: [order_id], references: [order_id])
  products   products @relation(fields: [product_id], references: [product_id])

  @@id([order_id, product_id], map: "pk_order_details")
}

model orders {
  order_id         Int             @id @default(autoincrement())
  customer_id      String?         @db.Char
  employee_id      Int?
  order_date       DateTime?       @db.Date
  required_date    DateTime?       @db.Date
  shipped_date     DateTime?       @db.Date
  ship_via         Int?
  freight          Float?          @db.Real
  ship_name        String?         @db.VarChar(40)
  ship_address     String?         @db.VarChar(60)
  ship_city        String?         @db.VarChar(15)
  ship_region      String?         @db.VarChar(15)
  ship_postal_code String?         @db.VarChar(10)
  ship_country     String?         @db.VarChar(15)
  order_details    order_details[]
  customers        customers?      @relation(fields: [customer_id], references: [customer_id])
  employees        employees?      @relation(fields: [employee_id], references: [employee_id])
  shippers         shippers?       @relation(fields: [ship_via], references: [id])
}

model products {
  product_id        Int             @id @default(autoincrement())
  product_name      String          @db.VarChar(40)
  supplier_id       Int?
  category_id       Int?
  quantity_per_unit String?         @db.VarChar(20)
  unit_price        Float?          @db.Real
  units_in_stock    Int?
  units_on_order    Int?
  reorder_level     Int?
  discontinued      Int
  order_details     order_details[]
  categories        categories?     @relation(fields: [category_id], references: [category_id])
  suppliers         suppliers?      @relation(fields: [supplier_id], references: [supplier_id])
}

model region {
  region_id          Int           @id @default(autoincrement())
  region_description String        @db.Char
  territories        territories[]
}

model shippers {
  id           Int      @id @default(autoincrement())
  company_name String   @unique @db.VarChar(40)
  phone        String?  @db.VarChar(24)
  orders       orders[]
  // address1 String
  // address2 String
  // city String
  // state String
  // zip String
}

model suppliers {
  supplier_id   Int        @id @default(autoincrement())
  company_name  String     @db.VarChar(40)
  contact_name  String?    @db.VarChar(30)
  contact_title String?    @db.VarChar(30)
  address       String?    @db.VarChar(60)
  city          String?    @db.VarChar(15)
  region        String?    @db.VarChar(15)
  postal_code   String?    @db.VarChar(10)
  country       String?    @db.VarChar(15)
  phone         String?    @db.VarChar(24)
  fax           String?    @db.VarChar(24)
  homepage      String?
  products      products[]
}

model territories {
  territory_id          String                 @id @db.VarChar(20)
  territory_description String                 @db.Char
  region_id             Int
  employee_territories  employee_territories[]
  region                region                 @relation(fields: [region_id], references: [region_id])
}

model us_states {
  state_id     Int     @id @default(autoincrement())
  state_name   String? @db.VarChar(100)
  state_abbr   String? @db.VarChar(2)
  state_region String? @db.VarChar(50)
}
